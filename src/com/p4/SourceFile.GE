set_units(unit: metric);
set_cut_mode(mode: absolute);
set_feed_rate_mode(mode: units_per_minute);

pos corner1 = {x: 0, y: 0};
pos corner2 = {x: 0, y: 5};
pos corner3 = {x: 5, y: 5};
pos corner4 = {x: 5, y: 0};

cut_line(pos: corner2, speed: 60);
cut_line(pos: corner3, speed: 60);
cut_line(pos: corner4, speed: 60);
cut_line(pos: corner1, speed: 60);
cut_line(pos: corner2, speed: 60);

void windows(int x_window_start, int y_window_start){
    pos w_corner1 = {x: x_window_start, y: y_window_start};
    pos w_corner2 = {x: x_window_start, y: y_window_start + 1};
    pos w_corner3 = {x: x_window_start + 1, y: y_window_start + 1};
    pos w_corner4 = {x: x_window_start + 1, y: y_window_start};

    rapid_move(pos: w_corner1);

    cut_line(pos: w_corner2, speed: 60);
    cut_line(pos: w_corner3, speed: 60);
    cut_line(pos: w_corner4, speed: 60);
    cut_line(pos: w_corner1, speed: 60);
}

void door(int x_door_start, int y_door_start){
    int d_corner1[] = {x_door_start, y_door_start};
    int d_corner2[] = {x_door_start, y_door_start + 2};
    int d_corner3[] = {x_door_start + 1, y_door_start + 2};
    int d_corner4[] = {x_door_start + 1, y_door_start};

    rapid_move(x: d_corner1[0], y: d_corner1[1]);

    cut_line(x: d_corner2[0], y: d_corner2[1], speed: 60);
    cut_line(x: d_corner3[0], y: d_corner3[1], speed: 60);
    cut_line(x: d_corner4[0], y: d_corner4[1], speed: 60);
    cut_line(x: d_corner1[0], y: d_corner1[1], speed: 60);
}

rapid_move(x: 0, y: 5);
cut_clockwise_circular(x:2.5, y: 7.5, x_offset: 3.5, y_offset: -5, speed: 60);

rapid_move(x: 2.7, y: 6.05);
cut_clockwise_circular(pos: corner3, x_offset: -1.1, y_offset: -5.5, speed: 60);

rapid_move(x: 4, y: 3.5);
cut_clockwise_circular(x:4, y: 3.5, x_offset: -0.5, y_offset: 0, speed: 60);

windows(x_window_start: 1, y_window_start: 1);
windows(x_window_start: 1, y_window_start: 3);
door(x_door_start: 3, y_door_start: 0);